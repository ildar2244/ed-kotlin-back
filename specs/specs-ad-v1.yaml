openapi: 3.0.4
info:
  title: "Объявления услуги"
  description: Сервис для создания и временного хранения объявлений услуг
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: ad
    description: Объявление услуги
paths:
  /ad/create:
    post:
      tags:
        - ad
      summary: Create ad
      operationId: adCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdCreateResponse'
  /ad/read:
    post:
      tags:
        - ad
      summary: Read ad
      operationId: adRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdReadResponse'
  /ad/update:
    post:
      tags:
        - ad
      summary: Update ad
      operationId: adUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdUpdateResponse'
  /ad/delete:
    post:
      tags:
        - ad
      summary: Delete ad
      operationId: adDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdDeleteResponse'

components:
  schemas:

    # Компоненты логгирования запросов
    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/AdCreateRequest'
          read: '#/components/schemas/AdReadRequest'
          update: '#/components/schemas/AdUpdateRequest'
          delete: '#/components/schemas/AdDeleteRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/AdCreateResponse'
          read:   '#/components/schemas/AdReadResponse'
          update: '#/components/schemas/AdUpdateResponse'
          delete: '#/components/schemas/AdDeleteResponse'

    # STUBS ======================
    AdRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    AdRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/AdDebug'

    AdDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AdRequestDebugMode'
        stub:
          $ref: '#/components/schemas/AdRequestDebugStubs'

    AdRequestDebugStubs:
      type: string
      description: Перечисления всех стабов
      enum:
        - success
        - notFound
        - badId
        - badTitle
        - badDescription
        - badPhone
        - badTelegramId
        - badVkId
        - cannotDelete

    # Компоненты для транспортных моделей ======
    UserId:
      type: string
      description: Идентификатор пользователя
    AdId:
      type: string
      description: Идентификатор объявления

    BaseAd:
      type: object
      description: Объект описывает свойства
      properties:
        title:
          type: string
          description: Заголовок объявления
        description:
          type: string
          description: Описание объявления
        price:
          type: string
        dateCreate:
          type: string
        phone:
          type: string
        telegramId:
          type: string
        vkId:
          type: string

    ## REQUEST (для запросов) ================
    AdCreateObject:
     allOf:
       - $ref: '#/components/schemas/BaseAd'

    AdCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdCreateObject'

    AdReadObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'

    AdReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdReadObject'

    AdUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'

    AdUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdUpdateObject'

    AdDeleteObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/AdId'

    AdDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            ad:
              $ref: '#/components/schemas/AdDeleteObject'

    ## RESPONSE (для ответов) ================
    AdResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          description: Объект, который возвращается в ответе бэкенда
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            ownerId:
              $ref: '#/components/schemas/UserId'

    AdResponseSingle:
      allOf:
        - type: object
          description: Ответ с одним объектом объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdResponseObject'

    AdResponseMulti:
      allOf:
        - type: object
          description: Список найденных объектов
          properties:
            ads:
              type: array
              items:
                $ref: '#/components/schemas/AdResponseObject'

    AdCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'